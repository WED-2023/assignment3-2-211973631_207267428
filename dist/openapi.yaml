openapi: 3.0.0
info:
  title: Recipes api
  description: API for recipes project
  version: 1.0.1
servers:
  # local:
  - url: "http://127.0.0.1:3000"
    # remote:
    # - url: "http://132.72.65.211"
    description: SwaggerHub API Auto Mocking hey
tags:
  - name: Auth
    description: All authentication related routes
  - name: Users
    description: All the user's personal app info
  - name: Recipes
    description: All reciepes general info
paths:
  /Register:
    post:
      tags: [Auth]
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        "201":
          description: User created successfully

  /Login:
    post:
      tags: [Auth]
      summary: Log in an existing user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        "200":
          description: Login successful

  /Logout:
    post:
      tags: [Auth]
      summary: Log out user
      responses:
        "200":
          description: Logout successful

  /users/favorites:
    get:
      tags: [Users]
      summary: Get favorite recipes for logged-in user
      responses:
        "200":
          description: List of favorite recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
    post:
      tags: [Users]
      summary: Save recipe to favorites
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: [recipeId]
              properties:
                recipeId:
                  type: string
      responses:
        "200":
          description: Recipe saved as favorite

  /users/lastwatched:
    post:
      tags: [Users]
      summary: Get last watched recipes
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: [amount]
              properties:
                amount:
                  type: integer
      responses:
        "200":
          description: Last watched recipes list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'

  /users/familyrecipes:
    get:
      tags: [Users]
      summary: Get family recipes (restricted)
      responses:
        "200":
          description: Recipes returned or access denied

  /users/createrecipe:
    post:
      tags: [Users]
      summary: Create a new custom recipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
      responses:
        "201":
          description: Recipe created

  /users/userlikes:
    post:
      tags: [Users]
      summary: Like a recipe
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: [recipeId]
              properties:
                recipeId:
                  type: string
      responses:
        "200":
          description: Recipe liked successfully

  /users/myrecipes:
    get:
      tags: [Users]
      summary: Get user's custom recipes
      responses:
        "200":
          description: Custom recipes list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'

  /recipes:
    get:
      tags: [Recipes]
      summary: Ping route
      responses:
        "200":
          description: Returns basic message

  /recipes/getfullrecipeId:
    get:
      tags: [Recipes]
      summary: Get full recipe details by ID
      parameters:
        - name: recipeId
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Recipe details returned

  /recipes/searchrecipe:
    get:
      tags: [Recipes]
      summary: Search recipes
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: amount
          in: query
          schema:
            type: integer
        - name: cuisine
          in: query
          schema:
            type: string
        - name: diet
          in: query
          schema:
            type: string
        - name: intolerance
          in: query
          schema:
            type: string
        - name: orderBy # can be either "time" or "popularity"
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Search results

  /recipes/get3random:
    get:
      tags: [Recipes]
      summary: Get 3 random recipes
      responses:
        "200":
          description: List of random recipes

  /recipes/{recipeId}:
    get:
      tags: [Recipes]
      summary: Get recipe by ID
      parameters:
        - name: recipeId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Full recipe returned

components:
  schemas:
    RegisterRequest:
      type: object
      required: [username, firstname, lastname, country, password, confirmPassword, email]
      properties:
        username:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        country:
          type: string
        password:
          type: string
          format: password
        confirmPassword:
          type: string
          format: password
        email:
          type: string
          format: email

    LoginRequest:
      type: object
      required: [username, password]
      properties:
        username:
          type: string
        password:
          type: string
          format: password

    Recipe:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        image:
          type: string
        readyInMinutes:
          type: integer
        likes:
          type: integer
        vegan:
          type: boolean
        vegetarian:
          type: boolean
        glutenFree:
          type: boolean
        viewed:
          type: boolean
        favorited:
          type: boolean
        serves:
          type: integer
        ingredients:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              amount:
                type: string
        instructions:
          type: array
          items:
            type: string